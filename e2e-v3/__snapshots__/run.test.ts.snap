// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`e2e > should lint with the config configuration > exit code 1`] = `1`;

exports[`e2e > should lint with the config configuration > stderr 1`] = `
"$ eslint . --format json
error: script "lint" exited with code 1
"
`;

exports[`e2e > should lint with the config configuration > stdout 1`] = `
[
  {
    "errorCount": 0,
    "fatalErrorCount": 0,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/eslint.config.mjs",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [],
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/button.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 15,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang='ts'>
  import type { HTMLButtonAttributes } from 'svelte/elements';
  import { twMerge } from 'tailwind-merge';

  type Props = HTMLButtonAttributes;

  const { ...rest }: Props = $props();

  const mergedClasses = $derived(
    twMerge(
      'ui-transition-all ui-px-4 ui-py-2 ui-font-semibold ui-rounded ui-shadow-sm ui-transition-all',
      rest.disabled ? 'ui-cursor-not-allowed ui-text-gray-500 ui-cursor-not-allowed ui-bg-gray-300' : 'ui-text-white ui-hover:bg-blue-600 ui-bg-blue-500',
      rest.class
    )
  );
</script>

<!-- Keep a duplicated class -->
<p class='ui-cursor-not-allowed ui-bg-gray-300 ui-text-gray-500 ui-cursor-not-allowed'>
  Classes with the class attribute
</p>
<button {...rest} class={mergedClasses}>
  {@render rest.children?.()}
</button>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/icon-button/icon-button.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 15,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang='ts'>
  import type { BaseProps } from './styles.js';

  import type { HTMLAnchorAttributes, HTMLButtonAttributes } from 'svelte/elements';

  import { getIconClasses, getWrapperClasses } from './styles.js';

  type Props = (
    | ({ href: string } & HTMLAnchorAttributes)
    | ({ href?: never } & HTMLButtonAttributes)
  ) & BaseProps;

  const {
    color = 'primary',
    Icon,
    iconClasses,
    size = 'default',
    strokeWidth,
    wrapperClasses,
    ...restProps
  }: Props = $props();

  const iconProps = { strokeWidth };
  const wrapperClass = $derived(getWrapperClasses({ classes: wrapperClasses, color, size }));
  const iconClass = $derived(getIconClasses({ classes: iconClasses, size }));
</script>

{#if 'href' in restProps}
  <a {...restProps as HTMLAnchorAttributes} class={wrapperClass} href={restProps.href}>
    <Icon class={iconClass} {...iconProps} />
  </a>
{:else}
  <button {...restProps as HTMLButtonAttributes} class={wrapperClass}>
    <Icon class={iconClass} {...iconProps} />
  </button>
{/if}
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 0,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/square.svelte",
    "fixableErrorCount": 1,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 1,
        "endColumn": 9,
        "endLine": 7,
        "fix": {
          "range": [
            34,
            34,
          ],
          "text": " lang="postcss"",
        },
        "line": 3,
        "message": "Using '@apply' requires setting style lang to postcss",
        "messageId": "require-postcss",
        "nodeType": "SvelteStyleElement",
        "ruleId": "svelte-tailwindcss/at-apply-require-postcss",
        "severity": 2,
      },
    ],
    "source": "<div class='square'></div>

<style>
.square {
    @apply w-10 h-10 bg-red-500;
}
</style>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/routes/+layout.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 17,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang="ts">
    import type { Snippet } from 'svelte';

    import '../global.css';

    import type { LayoutData } from './$types';

    import { fade } from 'svelte/transition';

    type Props = { children: Snippet; data: LayoutData };
    const { children, data }: Props = $props();
</script>

{#key data.pathname}
    <main
        class="container relative flex min-h-[calc(100vh-48px)] flex-col bg-white px-6 py-8 lg:py-12 lg:pb-28 lg:pt-16"
        in:fade={{ delay: 100, duration: 100 }}
        out:fade={{ duration: 100 }}
    >
        {@render children()}
    </main>
{/key}

<footer class="mt-auto flex h-12 w-full items-center justify-center bg-gray-50 text-sm">
    <p>Footer</p>
</footer>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
]
`;

exports[`e2e > should lint with the default configuration > exit code 1`] = `1`;

exports[`e2e > should lint with the default configuration > stderr 1`] = `
"$ eslint . --format json
error: script "lint" exited with code 1
"
`;

exports[`e2e > should lint with the default configuration > stdout 1`] = `
[
  {
    "errorCount": 0,
    "fatalErrorCount": 0,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/eslint.config.mjs",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [],
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/button.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 15,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang='ts'>
  import type { HTMLButtonAttributes } from 'svelte/elements';
  import { twMerge } from 'tailwind-merge';

  type Props = HTMLButtonAttributes;

  const { ...rest }: Props = $props();

  const mergedClasses = $derived(
    twMerge(
      'ui-transition-all ui-px-4 ui-py-2 ui-font-semibold ui-rounded ui-shadow-sm ui-transition-all',
      rest.disabled ? 'ui-cursor-not-allowed ui-text-gray-500 ui-cursor-not-allowed ui-bg-gray-300' : 'ui-text-white ui-hover:bg-blue-600 ui-bg-blue-500',
      rest.class
    )
  );
</script>

<!-- Keep a duplicated class -->
<p class='ui-cursor-not-allowed ui-bg-gray-300 ui-text-gray-500 ui-cursor-not-allowed'>
  Classes with the class attribute
</p>
<button {...rest} class={mergedClasses}>
  {@render rest.children?.()}
</button>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/icon-button/icon-button.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 15,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang='ts'>
  import type { BaseProps } from './styles.js';

  import type { HTMLAnchorAttributes, HTMLButtonAttributes } from 'svelte/elements';

  import { getIconClasses, getWrapperClasses } from './styles.js';

  type Props = (
    | ({ href: string } & HTMLAnchorAttributes)
    | ({ href?: never } & HTMLButtonAttributes)
  ) & BaseProps;

  const {
    color = 'primary',
    Icon,
    iconClasses,
    size = 'default',
    strokeWidth,
    wrapperClasses,
    ...restProps
  }: Props = $props();

  const iconProps = { strokeWidth };
  const wrapperClass = $derived(getWrapperClasses({ classes: wrapperClasses, color, size }));
  const iconClass = $derived(getIconClasses({ classes: iconClasses, size }));
</script>

{#if 'href' in restProps}
  <a {...restProps as HTMLAnchorAttributes} class={wrapperClass} href={restProps.href}>
    <Icon class={iconClass} {...iconProps} />
  </a>
{:else}
  <button {...restProps as HTMLButtonAttributes} class={wrapperClass}>
    <Icon class={iconClass} {...iconProps} />
  </button>
{/if}
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 0,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/square.svelte",
    "fixableErrorCount": 1,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 1,
        "endColumn": 9,
        "endLine": 7,
        "fix": {
          "range": [
            34,
            34,
          ],
          "text": " lang="postcss"",
        },
        "line": 3,
        "message": "Using '@apply' requires setting style lang to postcss",
        "messageId": "require-postcss",
        "nodeType": "SvelteStyleElement",
        "ruleId": "svelte-tailwindcss/at-apply-require-postcss",
        "severity": 2,
      },
    ],
    "source": "<div class='square'></div>

<style>
.square {
    @apply w-10 h-10 bg-red-500;
}
</style>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/routes/+layout.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 17,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang="ts">
    import type { Snippet } from 'svelte';

    import '../global.css';

    import type { LayoutData } from './$types';

    import { fade } from 'svelte/transition';

    type Props = { children: Snippet; data: LayoutData };
    const { children, data }: Props = $props();
</script>

{#key data.pathname}
    <main
        class="container relative flex min-h-[calc(100vh-48px)] flex-col bg-white px-6 py-8 lg:py-12 lg:pb-28 lg:pt-16"
        in:fade={{ delay: 100, duration: 100 }}
        out:fade={{ duration: 100 }}
    >
        {@render children()}
    </main>
{/key}

<footer class="mt-auto flex h-12 w-full items-center justify-center bg-gray-50 text-sm">
    <p>Footer</p>
</footer>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
]
`;

exports[`e2e > should lint with the settings configuration > exit code 1`] = `1`;

exports[`e2e > should lint with the settings configuration > stderr 1`] = `
"$ eslint . --format json
error: script "lint" exited with code 1
"
`;

exports[`e2e > should lint with the settings configuration > stdout 1`] = `
[
  {
    "errorCount": 0,
    "fatalErrorCount": 0,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/eslint.config.mjs",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [],
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/button.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 15,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang='ts'>
  import type { HTMLButtonAttributes } from 'svelte/elements';
  import { twMerge } from 'tailwind-merge';

  type Props = HTMLButtonAttributes;

  const { ...rest }: Props = $props();

  const mergedClasses = $derived(
    twMerge(
      'ui-transition-all ui-px-4 ui-py-2 ui-font-semibold ui-rounded ui-shadow-sm ui-transition-all',
      rest.disabled ? 'ui-cursor-not-allowed ui-text-gray-500 ui-cursor-not-allowed ui-bg-gray-300' : 'ui-text-white ui-hover:bg-blue-600 ui-bg-blue-500',
      rest.class
    )
  );
</script>

<!-- Keep a duplicated class -->
<p class='ui-cursor-not-allowed ui-bg-gray-300 ui-text-gray-500 ui-cursor-not-allowed'>
  Classes with the class attribute
</p>
<button {...rest} class={mergedClasses}>
  {@render rest.children?.()}
</button>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/icon-button/icon-button.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 15,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang='ts'>
  import type { BaseProps } from './styles.js';

  import type { HTMLAnchorAttributes, HTMLButtonAttributes } from 'svelte/elements';

  import { getIconClasses, getWrapperClasses } from './styles.js';

  type Props = (
    | ({ href: string } & HTMLAnchorAttributes)
    | ({ href?: never } & HTMLButtonAttributes)
  ) & BaseProps;

  const {
    color = 'primary',
    Icon,
    iconClasses,
    size = 'default',
    strokeWidth,
    wrapperClasses,
    ...restProps
  }: Props = $props();

  const iconProps = { strokeWidth };
  const wrapperClass = $derived(getWrapperClasses({ classes: wrapperClasses, color, size }));
  const iconClass = $derived(getIconClasses({ classes: iconClasses, size }));
</script>

{#if 'href' in restProps}
  <a {...restProps as HTMLAnchorAttributes} class={wrapperClass} href={restProps.href}>
    <Icon class={iconClass} {...iconProps} />
  </a>
{:else}
  <button {...restProps as HTMLButtonAttributes} class={wrapperClass}>
    <Icon class={iconClass} {...iconProps} />
  </button>
{/if}
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 0,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/lib/components/square.svelte",
    "fixableErrorCount": 1,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 1,
        "endColumn": 9,
        "endLine": 7,
        "fix": {
          "range": [
            34,
            34,
          ],
          "text": " lang="postcss"",
        },
        "line": 3,
        "message": "Using '@apply' requires setting style lang to postcss",
        "messageId": "require-postcss",
        "nodeType": "SvelteStyleElement",
        "ruleId": "svelte-tailwindcss/at-apply-require-postcss",
        "severity": 2,
      },
    ],
    "source": "<div class='square'></div>

<style>
.square {
    @apply w-10 h-10 bg-red-500;
}
</style>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
  {
    "errorCount": 1,
    "fatalErrorCount": 1,
    "filePath": "/Users/miquel.dedomingo/Documents/personal/open-source/eslint-plugin-svelte-tailwindcss/e2e-v3/src/routes/+layout.svelte",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": [
      {
        "column": 17,
        "fatal": true,
        "line": 2,
        "message": "Parsing error: Unexpected token {",
        "nodeType": null,
        "ruleId": null,
        "severity": 2,
      },
    ],
    "source": "<script lang="ts">
    import type { Snippet } from 'svelte';

    import '../global.css';

    import type { LayoutData } from './$types';

    import { fade } from 'svelte/transition';

    type Props = { children: Snippet; data: LayoutData };
    const { children, data }: Props = $props();
</script>

{#key data.pathname}
    <main
        class="container relative flex min-h-[calc(100vh-48px)] flex-col bg-white px-6 py-8 lg:py-12 lg:pb-28 lg:pt-16"
        in:fade={{ delay: 100, duration: 100 }}
        out:fade={{ duration: 100 }}
    >
        {@render children()}
    </main>
{/key}

<footer class="mt-auto flex h-12 w-full items-center justify-center bg-gray-50 text-sm">
    <p>Footer</p>
</footer>
",
    "suppressedMessages": [],
    "usedDeprecatedRules": [],
    "warningCount": 0,
  },
]
`;
